Metadata-Version: 2.4
Name: ec2_restore
Version: 1.0.0
Summary: A powerful tool for restoring EC2 instances from AMIs
Home-page: https://github.com/yourusername/ec2_restore
Author: Your Name
Author-email: your.email@example.com
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: System Administrators
Classifier: Topic :: System :: Systems Administration
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.8
Description-Content-Type: text/markdown
Requires-Dist: boto3>=1.26.0
Requires-Dist: click>=8.1.0
Requires-Dist: rich>=13.0.0
Requires-Dist: pyyaml>=6.0
Requires-Dist: python-dotenv>=1.0.0
Requires-Dist: colorama>=0.4.6
Requires-Dist: tqdm>=4.65.0
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

# EC2 Instance Restore Tool

A powerful and user-friendly tool for restoring EC2 instances from AMIs with support for both full instance restoration and volume-level restoration.

## Features

- Full instance restoration with ENI preservation
- Volume-level restoration with selective volume restoration
- Support for multiple instance restoration
- Real-time progress tracking
- Detailed restoration reports
- Graceful error handling and rollback capabilities
- Interactive CLI interface
- Configurable AWS profile support
- Comprehensive logging

## Prerequisites

- Python 3.8 or higher
- AWS CLI configured with appropriate credentials
- Required Python packages (install using `pip install -r requirements.txt`)

## Installation

1. Clone this repository
2. Install required packages:
   ```bash
   pip install -r requirements.txt
   ```
3. Configure your AWS credentials:
   - Either use AWS CLI to configure credentials (`aws configure`)
   - Or set environment variables (AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY, AWS_DEFAULT_REGION)

## Configuration

Edit `config.yaml` to customize the tool's behavior:
- AWS profile selection
- Region settings
- Number of AMIs to display
- Logging configuration

## Usage

### Basic Usage

```bash
python ec2_restore.py --instance-id i-1234567890abcdef0
```

or

```bash
python ec2_restore.py --instance-name "my-instance"
```

### Multiple Instances

```bash
python ec2_restore.py --instance-ids i-1234567890abcdef0 i-0987654321fedcba0
```

### Advanced Options

```bash
python ec2_restore.py --instance-id i-1234567890abcdef0 --restore-type volume --volumes /dev/sda1 /dev/sda2
```

## Restoration Types

### Full Instance Restoration
- Creates a new instance from the selected AMI
- Preserves the original ENI and private IP
- Maintains all instance configurations
- Creates a backup of instance metadata

### Volume Restoration
- Allows selective restoration of specific volumes
- Supports multiple volume restoration
- Preserves instance configuration
- Creates volume snapshots before restoration

## Safety Features

- Automatic metadata backup before restoration
- Progress tracking and status updates
- Graceful error handling with rollback capabilities
- Instance state preservation
- ENI preservation for network consistency
- Detailed logging of all operations

## Reports

After each restoration, a detailed report is generated containing:
- Original instance configuration
- Changes made during restoration
- New instance configuration
- Any errors or warnings encountered

## Error Handling

The tool implements comprehensive error handling:
- Graceful exit at any stage
- Automatic cleanup of stopped instances
- Preservation of critical metadata
- Rollback capabilities in case of failures

## Logging

Detailed logs are maintained in the configured log file (default: ec2_restore.log) with:
- Operation timestamps
- Detailed error messages
- Configuration changes
- Progress updates

## Contributing

Contributions are welcome! Please feel free to submit a Pull Request.

## License

This project is licensed under the MIT License - see the LICENSE file for details. 
